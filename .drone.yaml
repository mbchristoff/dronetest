---
name: image_building
kind: pipeline
type: docker


steps:
# nginx
  - name: build nginx:test1
    image: plugins/docker
    depends_on:
      - clone
    privileged: true
    settings:
      repo: registry.nextpertise.tools/nextpertise/michaelnginx
      registry: registry.nextpertise.tools
      dockerfile: build/web/Dockerfile
      pull_image: true
      context: build/web/
      build_args:
        - tag=test1
      username:
        from_secret: platform_harbor_username
      password:
        from_secret: platform_harbor_password
      tags:
        - test1
#php
  - name: build php:test1
    image: plugins/docker
    depends_on:
      - clone
    privileged: true
    settings:
      repo: registry.nextpertise.tools/nextpertise/michaelphp
      registry: registry.nextpertise.tools
      dockerfile: build/php/Dockerfile
      pull_image: true
      context: build/php/
      build_args:
        - tag=test1
      username:
        from_secret: platform_harbor_username
      password:
        from_secret: platform_harbor_password
      tags:
        - test1
image_pull_secrets:
  - platform_harbor_pull_secrets

---
name: deployment
kind: pipeline
name: deploy

steps:
  - name: Set environment
    image: objectiflibre/jinja-init
    user: 0
    environment:
      JINJA_SRC_FILE: 'kubetemplate.j2'
      JINJA_DEST_FILE: '/config/kubefile.yaml'
      JINJA_VAR_branchtag: test2
      JINJA_VAR_harborsecret: 
        from_secret: platform_harbor_pull_secrets
      JINJA_VAR_rkecluster: rke-test.nextpertise.nl
    volumes:
    - name: configs
      path: /config
    commands:
    - python /run.py
    - cat /config/kubefile.yaml
    depends_on:
      - clone

  - name: deploy to test
    image: sinlead/drone-kubectl
    depends_on:
      - Set environment
    volumes:
    - name: configs
      path: /config
    settings:
      kubernetes_server:
        from_secret: rke_test_server
      kubernetes_cert:
        from_secret: rke_test_cert
      kubernetes_token:
        from_secret: rke_test_token
    commands:
      - kubectl --insecure-skip-tls-verify=true apply -f /config/kubefile.yaml
    when:

  - name: deploy to prod
    image: sinlead/drone-kubectl
    depends_on:
      - Set environment
    volumes:
    - name: configs
      path: /config
    settings:
      kubernetes_server:
        from_secret: rke_prod_server
      kubernetes_cert:
        from_secret: rke_prod_cert
      kubernetes_token:
        from_secret: rke_prod_token
    commands:
      - kubectl --insecure-skip-tls-verify=true apply -f /config/kubefile.yaml
    when:
        event:
        - promote
        target:
        - production

depends_on:
- image_building

volumes:
- name: configs
  host:
    path: /tmp/build